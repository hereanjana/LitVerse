"""Add new fields

Revision ID: 2fd1da5a06ef
Revises: 931a897445df
Create Date: 2025-04-01 00:26:20.184661

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2fd1da5a06ef'
down_revision: Union[str, None] = '931a897445df'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book_subject')

  
    op.drop_index('ix_subjects_id', table_name='subjects')
    op.drop_index('ix_subjects_name', table_name='subjects')
    op.drop_table('subjects')
    op.drop_table('book_author')
    op.drop_table('book_genres')
    op.drop_table('onboarded_user_books')
    op.drop_index('ix_books_author', table_name='books')
    op.drop_index('ix_books_id', table_name='books')
    op.drop_index('ix_books_isbn', table_name='books')
    op.drop_index('ix_books_title', table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('books_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('isbn', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('publication_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cover_image_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='books_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_books_title', 'books', ['title'], unique=False)
    op.create_index('ix_books_isbn', 'books', ['isbn'], unique=True)
    op.create_index('ix_books_id', 'books', ['id'], unique=False)
    op.create_index('ix_books_author', 'books', ['author'], unique=False)
    op.create_table('onboarded_user_books',
    sa.Column('onboarded_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='onboarded_user_books_book_id_fkey'),
    sa.ForeignKeyConstraint(['onboarded_user_id'], ['onboarded_users.id'], name='onboarded_user_books_onboarded_user_id_fkey'),
    sa.PrimaryKeyConstraint('onboarded_user_id', 'book_id', name='onboarded_user_books_pkey')
    )
    op.create_table('book_genres',
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('genre_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='book_genres_book_id_fkey'),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], name='book_genres_genre_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', 'genre_id', name='book_genres_pkey')
    )
    op.create_table('book_author',
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name='book_author_author_id_fkey'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='book_author_book_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', 'author_id', name='book_author_pkey')
    )
    op.create_table('subjects',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('subjects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='subjects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_subjects_name', 'subjects', ['name'], unique=True)
    op.create_index('ix_subjects_id', 'subjects', ['id'], unique=False)
    op.create_table('authors',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('open_library_key', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='authors_pkey'),
    sa.UniqueConstraint('open_library_key', name='authors_open_library_key_key')
    )
    op.create_index('ix_authors_name', 'authors', ['name'], unique=False)
    op.create_index('ix_authors_id', 'authors', ['id'], unique=False)
    op.create_table('book_subject',
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='book_subject_book_id_fkey'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name='book_subject_subject_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', 'subject_id', name='book_subject_pkey')
    )
    # ### end Alembic commands ###
